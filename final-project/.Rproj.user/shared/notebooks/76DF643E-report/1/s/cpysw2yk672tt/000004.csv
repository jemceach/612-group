"0","# Business Data"
"0","# sort data by Business Name alphabetically"
"0","df_main_train_business<- business2[ , order(names(business2))] %>% .[,c(3,1,2,7,9,10,12,13,11)] %>% mutate(df_main_train_business,categories_all = as.character(categories)) "
"0","## Keeping STARS for Training set at index 11"
"0","# Changing the columns name for clarity so that we can identify business data and user data ( except the keys )"
"0"," HeaderName_bus <- c( ""bus_city"","
"0","                  ""business_id"","
"0","                  ""bus_categories"","
"0","                  ""bus_name"","
"0","                  ""bus_open"" ,"
"0","                  ""bus_review_count"","
"0","                  ""bus_state"","
"0","                  ""bus_type"","
"0","                  ""bus_stars"","
"0","                  ""bus_categories_all"")"
"0"," names(df_main_train_business) <- HeaderName_bus"
"0","# User Data"
"0","# Votes is dataframe in the user dataset , we will read this data and then bind columns with user data."
"0","df_main_train_user <- user2 %>% select( -votes) %>% bind_cols(.,user2$votes) %>% .[,c(1,2,4,5,3,6,7,8)]"
"0","df_main_train_user_long <- gather(df_main_train_user,key= ""mood"", value = ""rating"",funny,useful,cool)"
"0","# Test User"
"0","# Updating the name of the Users Votes column to user_funny , user_usefull, user_cool"
"0","HeaderName_usr <- c(""user_id"",""usr_name"",""usr_review_count"", ""usr_type"",""usr_average_stars"",""usr_funny"",""usr_useful"",""usr_cool"")"
"0","names(df_main_train_user) <- HeaderName_usr"
"0","#checkins data"
"0","#         '0-0': (number of checkins from 00:00 to 01:00 on all Sundays),"
"0","#         '1-0': (number of checkins from 01:00 to 02:00 on all Sundays), "
"0","#         ... "
"0","#         '14-4': (number of checkins from 14:00 to 15:00 on all Thursdays),"
"0","#         ..."
"0","#         '23-6': (number of checkins from 23:00 to 00:00 on all Saturdays)"
"0","# checkin_info is a dataframe with the above structure of the data, we would extract this info and append it to the Checkin Table against the Business ID."
"0","df_main_train_checkin <- checkin2  %>% select( -checkin_info) %>% bind_cols(.,checkin2$checkin_info) # %>% .[,c(1,2,4,5,3,6,7,8)]"
"0","#Reviews Data "
"0","df_review2_vote <- review2$votes"
"0","df_main_train_review <- review2  %>% select( -votes) %>% bind_cols(.,df_review2_vote) "
"0","HeaderName_rev <- c(""user_id"" ,"
"0","                ""review_id"","
"0","                ""rev_stars"","
"0","                ""rev_date"" ,"
"0","                ""rev_text"" ,"
"0","                ""rev_type"" ,"
"0","                ""business_id"","
"0","                ""rev_funny""   ,"
"0","                ""rev_useful"" ,"
"0","                ""rev_cool"")"
"0","names(df_main_train_review) <- HeaderName_rev"
"0","#----------------------------------------------------------------------------------------------"
"0","# Building Main data set by Joining all the above data sets on key of Business_ID and User_ID"
"0","#----------------------------------------------------------------------------------------------"
"0","#Group all reviews that have a business with a star rating"
"0","review_bus  <- inner_join(df_main_train_review,df_main_train_business,by=(""business_id""))"
"0","#Group all reviews that have and User's data"
"0","review_user <-   inner_join(df_main_train_review,df_main_train_user,by=(""user_id""))"
"0","# joining all the ""Review and Users"" information with  the ""Review and Business""  Dataset. "
"0","# Moving Key in the Begning "
"0","DF_MAIN <- inner_join(review_bus,review_user[,-c(2,3,4,5,6,8,9,10)], "
"0","                              by =c(""business_id"",""user_id"")) %>% .[,c(1,2,7,3,4,5,6,8:26)]"
"0","# Appending the Checkins information for the Business "
"0","DF_MAIN_CHK <- inner_join(DF_MAIN,df_main_train_checkin[,-c(1)],by=(""business_id""))"
