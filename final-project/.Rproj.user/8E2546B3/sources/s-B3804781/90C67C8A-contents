---
title: "report"
author: "Juliann McEachern, Rajwant Mishra,Christina Valore"
date:  " July 16, 2019"
output: 
  html_document:
    theme: flatly
    highlight: pygments
    toc_depth: 2
    df_print: paged
    code_folding: hide
---


```{r include=FALSE}
library(dplyr); library(tidyr)
library(jsonlite)
library(tidyverse)
library(plyr)
library(DT)
```

```{r include=FALSE}
# Read JSON files from repository 
# Business Test and Train Data 
business1<-stream_in(file("data/yelp_test_set_business.json"))
business2<-stream_in(file("data/yelp_training_set_business.json"))

# user Test and Train Data 
user1 <-stream_in(file("data/yelp_test_set_user.json"))
user2 <-stream_in(file("data/yelp_training_set_user.json"))

# checkin Test and Train Data 
checkin1 <-stream_in(file("data/yelp_test_set_checkin.json"))
checkin2 <-stream_in(file("data/yelp_training_set_checkin.json"))

# review Test and Train Data 
review1 <-stream_in(file("data/yelp_test_set_review.json"))
review2 <-stream_in(file("data/yelp_training_set_review.json"))
```



```{r include=FALSE}
# sort alphabetically
df_main_test_business <- business1[ , order(names(business1))] %>% .[,c(3,1,2,7,9,10,11,12)]
df_main_train_business<- business2[ , order(names(business2))] %>% .[,c(3,1,2,7,9,10,12,13,11)] ## Keeping STARTS for Training set at index 11
head(df_main_test_business)


```

```{r include=FALSE}
head(df_main_train_business)


```
```{r include=FALSE}

#-----------------------------------------------------------------------BACKUP ZONE START
# glimpse(df_main_train_business)
# glimpse(df_main_test_business)
# 
# unnest(df_main_train_business,.id=
#          "R")

# ddply(df_main_train_business, .(`business_id`), mutate,
#        categories_all =paste(unique(`categories`),collapse=":"))

#Not needed , keeping this code for backup
#mutate(df_main_train_business,categories_all = as.character(categories)) 
#-----------------------------------------------------------------------BACKUP ZONE ENDs

# Expanding Categories to each Row for each business.

df_main_train_business_long<- df_main_train_business %>% 
  unnest(categories ,.id= "id") %>% .[,c(2,3,4,5,6,9,1,8)] # Star column at index at 8

df_main_test_business_long<- df_main_test_business %>% 
  unnest(categories ,.id= "id") %>% .[,c(2,3,4,5,6,9,1)]

head(df_main_test_business_long)
head(df_main_train_business_long)

```



```{r include=FALSE}
# Test data 
head(user1)
# Train Data 
# ! Keeping the extra column in Train data 
head(user2)



```

```{r include=FALSE}
# Train  User
rm(vote)
vote <- user2$votes
df_main_train_user <- user2 %>% select( -votes) %>% bind_cols(.,vote) %>% .[,c(1,2,4,5,3,6,7,8)]

df_main_train_user_long <- gather(df_main_train_user,key= "mood", value = "rating",funny,useful,cool)
# Test User
df_main_test_user <- user1[,c(1,3,2,4)] 

# Train
head(df_main_train_user)
head(df_main_train_user_long)

# Test 
head(df_main_test_user)



```

```{r include=FALSE}
head(checkin1) # Test 
head(checkin2) # Train 
```
```{r include=FALSE}

# Test 
df_checkin_info1 <- checkin1$checkin_info
df_main_test_checkin <- checkin1  %>% select( -checkin_info) %>% bind_cols(.,df_checkin_info1) # %>% .[,c(1,2,4,5,3,6,7,8)]

# Train
df_checkin_info2 <- checkin2$checkin_info
df_main_train_checkin <- checkin2  %>% select( -checkin_info) %>% bind_cols(.,df_checkin_info2) # %>% .[,c(1,2,4,5,3,6,7,8)]

head(df_main_train_checkin)
head(df_main_test_checkin)
```

```{r include=FALSE}
head(review1) # Test 
head(review2) # Train 
```
```{r include=FALSE}

#Test
df_main_test_review <- review1  
# Train
df_review2_vote <- review2$votes
df_main_train_review <- review2  %>% select( -votes) %>% bind_cols(.,df_review2_vote) 
head(df_main_test_review)
head(df_main_train_review)
```
## Data Preparation 

### Business Data
<center>**Business Train Data** </center>
 `r head(df_main_train_business)`
 
<center>**Business Train Long Data** </center>
 `r head(df_main_train_business_long)`
 
<center>**Business Test Data** </center>
 `r head(df_main_test_business)`
<center>**Business Test Long Data** </center>
 `r head(df_main_test_business_long)` 
 
### User Data 
<center>**User Train Data** </center>
`r head(df_main_train_user) `
<center>**User Train Long Data** </center>
`r head(df_main_train_user_long)`
<center>**User Test Data ** </center>
`r head(df_main_test_user)`

### Checkin Data
<center>**Checkin Train Data** </center>
`r head(df_main_train_checkin)`
<center>**Checkin Test Data ** </center>
`r head(df_main_test_checkin)`

### Review Data
<center>**Review Train Data** </center>
`r head(df_main_train_review)`

<center>**Review Test Data** </center>
`r head(df_main_test_review) `


> We aim to build out a system where we recommend businesses to users based on past reviews, check-inâ€™s and location. 



<hr><hr>
```{r eval=FALSE, include=FALSE}
# View col names for test set
colnames(business1)
```


```{r eval=FALSE, include=FALSE}
# View col names for train set
colnames(business2)
```




```{r eval=FALSE, include=FALSE}
# Identified business2 does not have "stars" variable. Dropping and merging dataframes.
business2 <- select(business2, -stars)
```




```{r eval=FALSE, include=FALSE}
# Bind dataframes. 
business_df <- rbind(business1, business2)
```




